{
	"copyright":"Copyright (c) 2019 by Jonatan Gomez-Perdomo. All rights reserved. See <A HREF='https://github.com/jgomezpe/konekti'>License</A>.",
"uses":["navbar","accordion"],
"html":"<div id='·id·title'  class='w3-container w3-center w3-·font· ·titlecolor·' >·title·</div>\n<div id='·id·navbar' class='w3-bar'></div>\n<!-- Page Content -->\n<div id='·root·' style='position:relative; width:100%; height:calc(100% - ·rheight·px)'></div>\n","js":"Konekti.plugin.filemanager.isFolder = function (x){ return (typeof x.children != 'undefined') }\n\nKonekti.plugin.filemanager.compare = function( x, y ){\n    var fx = Konekti.plugin.filemanager.isFolder(x)\n    var fy = Konekti.plugin.filemanager.isFolder(y)\n    if( fx && !fy ) return -1\n    if( fy && !fx ) return 1\n    return  x.caption.localeCompare(y.caption)\n}\n\nKonekti.plugin.filemanager.sort = function( tree ){\n    if(typeof tree.children != 'undefined' && tree.children.length > 0){\n        tree.children.sort(Konekti.plugin.filemanager.compare)  \n        for( var i=0; i<tree.children.length; i++ ) Konekti.plugin.filemanager.sort(tree.children[i])\n    } \n}\n\n\nKonekti.plugin.filemanager.htmlCode = function(dictionary){\n    dictionary.root = dictionary.tree.id\n    if( typeof dictionary.font == 'undefined' ) dictionary.font = 'xlarge'\n    var fs = Math.floor(1.5 * Konekti.util.fontSize(dictionary.font))\n    var titleHeight = fs+2\n    var navbarHeight = fs + 16\n    dictionary.rheight  = titleHeight + navbarHeight\n    return Konekti.util.fromTemplate( this.htmlTemplate, dictionary, '·' )\n}\n\nKonekti.plugin.filemanager.connect = function( dictionary ){\n    var btn = []\n    var cloud = false \n    if( typeof dictionary.cloud != 'undefined' ) cloud = dictionary.cloud \n    var store = ( typeof dictionary.store != 'undefined' );\n    var read = ( typeof dictionary.read != 'undefined' );\n    if( cloud ){\n\t    if(store) btn.push( {\"id\":\"store\",\"tooltip\":dictionary.store,\"fa\":\"fa fa-cloud-upload\"} )\n\t    if(read) btn.push( {\"id\":\"read\",\"tooltip\":dictionary.read,\"fa\":\"fa fa-cloud-download\"} )\n    }else{\n\t    if(store) btn.push( {\"id\":\"store\",\"tooltip\":dictionary.store,\"fa\":\"fa fa-download\"} )\n\t    if(read) btn.push( {\"id\":\"read\",\"tooltip\":dictionary.read,\"fa\":\"fa fa-upload\"} )\n    }\n\tbtn.push( {\"id\":\"remove\",\"tooltip\":dictionary.remove,\"fa\":\"fa fa-cut\"} )\n    \n\tvar nav ={\n\t\t\"plugin\":\"navbar\",\n        \"client\": dictionary.id,\n\t\t\"id\":dictionary.id+\"navbar\",\n\t\t\"color\":dictionary.barcolor,\n\t\t\"size\":dictionary.size,\n\t\t\"btn\":btn\t\t\n\t}\n\t\n\tKonekti.plugin.navbar.replaceWith(nav)\n\tKonekti.util.vc(nav.id).innerHTML += \n\t\"<div id='\"+dictionary.id+\"Output' class='w3-bar-item' ></div>\" +\n\t\"<input id='\"+dictionary.id+\"Input' placeholder='&#xF016;' class='w3-bar-item w3-input w3-border ·style·' style='font-family:FontAwesome' type='text'>\"\n\t\n\tKonekti.plugin.filemanager.sort(dictionary.tree)\n\n\tvar tree = dictionary.tree\n\t\n\ttree.client=dictionary.id\n\tKonekti.plugin.accordion.replaceWith(tree)\n\tnew FileManagerClient(dictionary)\n}\n\nclass FileManagerClient extends KonektiClient{\n\tconstructor( dictionary ){\n\t    super(dictionary.id)\n\t    this.dictionary = dictionary\n\t    this.path = dictionary.tree.id\n\t    Konekti.util.vc(this.id+'Output').innerHTML = this.path + '/'\n\t    this.file = \"\"\n\t    Konekti.util.vc(this.id+'Input').value = this.file\n\t}\n\t\n\texpand( path ){\n\t    this.path = path\n\t    Konekti.util.vc(this.id+'Output').innerHTML = this.path + '/'\n\t    this.file = \"\"\n\t    Konekti.util.vc(this.id+'Input').value = this.file\n\t}\n\t\n\n\tselect( file ){\n\t    var idx = file.lastIndexOf('/')\n\t    this.file = file.substring(idx+1)\n\t    this.path = file.substring(0,idx)\n\t    Konekti.util.vc(this.id+'Input').value = this.file\n\t}\n\t\n\tchild( comp, child ){\n\t    var i=0\n\t    while( i<comp.children.length && comp.children[i].id!=child ) i++\n\t    if(i<comp.children.length) return comp.children[i]\n\t    else return null\n\t}\n\t\n\ttraverse(){\n\t    var thePath = this.path.split('/')\n\t    var n = thePath.length\n\t    var comp = this.dictionary.tree\n\t    var child = thePath[0]\n\t    for(var i=1; i<n; i++){\n\t        child += '/' + thePath[i]\n\t        comp = this.child(comp, child)\n\t    }\n\t    return comp\n\t}\n\t\n\tinsert( children, child ){\n    \tvar i=0;\n\t    while( i<children.length && Konekti.plugin.filemanager.compare(child,children[i]) > 0 ) i++\n\t    children.splice(i,0,child)\n\t}\n\t\n\tstore(){\n\t    var name = Konekti.util.vc(this.id+'Input').value\n\t    var isFolder = name.endsWith('/')\n\t    if(isFolder) name = name.substring(0,name.length-1)\n\t    var comp = this.traverse()\n\t    var c = this.child(comp, comp.id+'/'+name)\n\t    var file = this.path+'/'+name\n\t    if( c==null ){\n\t        comp.symbol = 'fa fa-minus-square'\n\t        comp.show = ' w3-show'\n\t        if( isFolder ){\n\t           this.insert(comp.children,{\"id\":file, \"caption\":name, \"children\":[]}) \n\t           this.expand(this.path)\n\t        }else{\n\t           this.insert(comp.children,{\"id\":file, \"caption\":name}) \n\t        }\n\t       \tKonekti.plugin.accordion.replaceWith(comp)\n\t    }\n       \tif( typeof this.dictionary.client != 'undefined' ){\n       \t    Konekti.client[this.dictionary.client].addFile(file, isFolder)\n       \t}\n\t}\n\t\n\tremove(){\n\t    var ends = ''\n\t    var name = Konekti.util.vc(this.id+'Input').value\n\t    if(name.length==0){\n\t        var idx = this.path.lastIndexOf('/')\n\t        if(idx < 0) return\n\t        name = this.path.substring(idx+1)\n\t        this.path = this.path.substring(0,idx)\n\t        ends = '/'\n\t    }\n\t    var comp = this.traverse()\n\t    var c = this.child(comp, comp.id+'/'+name)\n\t    if( c!=null ){\n            comp.children.splice(comp.children.indexOf(c), 1);\n\t        comp.symbol = 'fa fa-minus-square'\n\t        comp.show = ' w3-show'\n\t       \tKonekti.plugin.accordion.replaceWith(comp)\n\t       \tthis.expand(this.path)\n\t       \tif( typeof this.dictionary.client != 'undefined' ){\n\t       \t    Konekti.client[this.dictionary.client].removeFile(c.id+ends)\n\t       \t}\n\t    }\n\t}\n\t\n\tread(){\n\t    var file = Konekti.util.vc(this.id+'Input').value\n\t    if(file.length!=0 && file.indexOf('/')<0 && typeof this.dictionary.client != 'undefined' ){\n\t        this.file = file\n       \t    Konekti.client[this.dictionary.client].readFile(this.path+'/'+this.file)\n\t   \t}\n\t}\n}"}
