{"html":"<div id='·id·'>\n    <input id='·id·Id' placeholder='·user·' class='w3-block w3-input w3-left-align w3-·font·'>\n    <input id='·id·Pwd' type='password' placeholder='·password·' class='w3-input w3-block w3-left-align w3-·font·'>\n    <button id='·id·LogIn' class='w3-button w3-block w3-left-align w3-·font·' onclick='Konekti.client[\"·id·\"].login_btn()'><i class='fa fa-user-circle-o'></i> ·Log In·</button>\n    <input id='·id·Email' placeholder='·email·' class='w3-input w3-block w3-left-align w3-·font·'>\n    <button id='·id·Recover' class='w3-button w3-block w3-left-align w3-·font·' onclick='Konekti.client[\"·id·\"].recover_btn()'><i class='fa fa-key'></i> ·Recover·</button>\n    <input id='·id·Nickname' placeholder='·nickname·' class='w3-input w3-block w3-left-align w3-·font·'>\n    <img id='·id·Img' src=\"https://konekti.numtseng.com/img/user.png\" alt=\"·avatar·\" width=\"200\" height=\"200\">\n    <input id='·id·Avatar' type='file' placeholder='·avatar·' class='w3-input w3-block w3-left-align w3-·font·'>\n    <button id='·id·Register' class='w3-button w3-block w3-left-align w3-·font·' onclick='Konekti.client[\"·id·\"].register_btn()'><i class='fa fa-user-plus'></i> ·Register·</button>\n    <div id='·id·Msg' class='w3-block'></div>\n</div>","js":"class KonektiUserClient extends KonektiClient{\n    constructor(id, client, endpoint){\n        super( id ) \n        var module = this\n        this.avatar = null\n        this.addListener(Konekti.client[client])\n        this.endpoint = endpoint\n\n        this.addEnter('Pwd', 'login_btn')\n        this.addEnter('Recover', 'recover_btn')\n        this.addEnter('Register', 'register_btn')\n        var img = this.vc('Img')\n        var avatarBtn = this.vc('Avatar')\n        if(avatarBtn !== null )\n        avatarBtn.onchange = function (evt) {\n            var tgt = evt.target || window.event.srcElement, \n            files = tgt.files;\n            // FileReader support\n            if (FileReader && files && files.length) {\n                var fr = new FileReader()\n                fr.onload = function () {\n                    img.src = fr.result\n                    module.avatar = fr.result\n                }\n                fr.readAsDataURL(files[0])\n            }\n\n            // Not supported\n            else {\n                // fallback -- perhaps submit the input to an iframe and temporarily store\n                // them on the server until the user's session ends.\n            }\n        }        \n    }\n    \n    addEnter( id, method ){\n        var module = this\n        // Execute a function when the user releases a key on the keyboard\n        var pass = this.vc(id)\n        if( pass == null ) return\n        pass.addEventListener(\"keyup\", function(event) {\n            // Number 13 is the \"Enter\" key on the keyboard\n            if (event.keyCode === 13) {\n                // Cancel the default action, if needed\n                event.preventDefault()\n                // Trigger the button element with a click\n                module[method]()\n            }\n        })\n    }\n    \n    get(){\n        var nick = this.vc('Nickname')\n        if( nick != null ) nick = nick.value\n        else nick = ''\n    \treturn {'id':this.vc('Id').value,\n    \t        'password':this.vc('Pwd').value,\n    \t        'email':this.vc('Email').value,\n    \t        'nickname':nick}\n    }\n    \n    login( user ){\n        if( user != null ){\n            this.vc('Pwd').value = ''\n            Konekti.user.credential = user.credential\n            for( var i=0; i<this.listener.length; i++)\n                this.listener[i].setUser(user)\n        }else this.vc('Msg').innerHTML = this.endpoint.login\n    }\n    \n    logout( ok ){\n        if( ok ){\n            this.vc('Pwd').value = ''\n            Konekti.user = {}\n            for( var i=0; i<this.listener.length; i++)\n                this.listener[i].logout()\n        }else this.vc('Msg').innerHTML = this.endpoint.login\n    }\n    \n    login_btn(){\n        var user = this.vc('Id').value\n        var password = this.vc('Pwd').value\n        if( user.length==0 || password.length==0 ){\n            this.vc('Msg').innerHTML = this.endpoint.login\n            return\n        }\n        Konekti.user = {\n            \"id\":user,\n            \"password\":password\n        }\n        var endpoint = new AplikigoEndPoint(this.endpoint.url)\n        endpoint.request(this.id, \"login\", [user, password])\n    }\n    \n    register( user ){ this.login( user ); }\n    \n    register_btn(){\n        var user = this.vc('Id').value\n        var password = this.vc('Pwd').value\n        var email = this.vc('Email').value\n        var nick = this.vc('Nickname').value\n        if(user.length==0 || password.length==0){\n            this.vc('Msg').innerHTML = this.endpoint.login\n            return\n        }\n        var u = {\n            \"id\":user,\n            \"password\":password,\n            \"nick\":nick,\n            \"email\":email,\n            \"avatar\":this.avatar\n        }\n        if(typeof Konekti.user.id === 'undefined' ) Konekti.user = u\n        var endpoint = new AplikigoEndPoint(this.endpoint.url)\n        endpoint.request(this.id, \"register\", [u])\n    }\n    \n    run( oper ){\n        var module = this\n        var id = this.id\n    \tvar user = this.get()\n    \tif( oper=='login' && (user.id.length==0 || user.password.length==0) ){\n    \t    this.vc('Msg').innerHTML = this.endpoint.login\n    \t    return\n    \t}\n    \tif( oper=='register' && (user.id.length==0 || user.password.length==0 || user.email.length==0) ){\n    \t    this.vc('Msg').innerHTML = this.endpoint.login\n    \t    return\n    \t}\n    \tif( oper=='recover' && (user.id.length==0 || user.email.length==0) ){\n    \t    this.vc('Msg').innerHTML = this.endpoint.recover\n    \t    return\n    \t}\n    \n/*    \tvar header = {'user':JSON.stringify(user), 'oper':oper}\n    \tvar endpoint = new KonektiEndPoint(this.endpoint.url,header)\n    \tendpoint.callback = function( xhttp ){\n            var code = xhttp.getResponseHeader('code')\n        \tif( code=='valid' ){\n                var user = JSON.parse(xhttp.getResponseHeader('user'))\n        \t    var obj = Konekti.util.downloadURL(xhttp.response)\n        \t    for( var i=0; i<module.listener.length; i++){\n            \t\tmodule.listener[i].setUser(user, obj)\n        \t    }\n        \t\tmodule.vc('Msg').innerHTML = ''\n        \t}else module.vc('Msg').innerHTML = module.endpoint[code]\n        }\n    \tendpoint.request()\n*/    \t\n    }    \n}\n\nKonekti.plugin.user.htmlCodeAll = function( dictionary ){\n    return Konekti.util.fromTemplate( this.htmlTemplate, dictionary, '·' )\n}\n\nKonekti.plugin.user.htmlCodeLogin = function( dictionary ){\n    var template = this.htmlTemplate\n    var idx1 = template.indexOf(\"<input id='·id·Nickname'\")\n    var idx2 = template.indexOf(\"<div id='·id·Msg'\")\n    template = template.substring(0, idx1) + template.substring(idx2)\n    return Konekti.util.fromTemplate( template, dictionary, '·' )\n}\n\nKonekti.plugin.user.htmlCodeRegister = function( dictionary ){\n    var template = this.htmlTemplate\n    var idx1 = template.indexOf(\"<button id='·id·LogIn'\")\n    var idx2 = template.indexOf(\"<input id='·id·Email'\")\n    var idx3 = template.indexOf(\"<button id='·id·Recover'\")\n    var idx4 = template.indexOf(\"<input id='·id·Nickname'\")\n    template = template.substring(0, idx1) + template.substring(idx2,idx3) + template.substring(idx4)\n    return Konekti.util.fromTemplate( template, dictionary, '·' )\n}\n\nKonekti.plugin.user.htmlCode = function( dictionary ){\n    if( dictionary.mode=='login') return this.htmlCodeLogin(dictionary)\n    if( dictionary.mode=='register') return this.htmlCodeRegister(dictionary)\n    return this.htmlCodeAll(dictionary)    \n}\n\nKonekti.plugin.user.connect = function( dictionary ){\n\n    new KonektiUserClient(dictionary.id, dictionary.client, dictionary.endpoint) \n}","copyright":"Copyright (c) 2019 by Jonatan Gomez-Perdomo. All rights reserved. See <A HREF='https://github.com/jgomezpe/konekti'>License</A>.","uses":["navbar"]}